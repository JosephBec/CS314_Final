{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2025-03-16T08:38:26.493Z",
    "end": "2025-03-16T08:38:31.059Z",
    "duration": 4566,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4c63b1c4-0bed-41fa-9121-1c61084ad117",
      "title": "",
      "fullFile": "cypress\\e2e\\authentication.cy.js",
      "file": "cypress\\e2e\\authentication.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "ccdc139b-df4b-4f39-bc15-c865f453d265",
          "title": "4.1 User Authentication",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "4.1.1 should register a new user with valid credentials",
              "fullTitle": "4.1 User Authentication 4.1.1 should register a new user with valid credentials",
              "timedOut": null,
              "duration": 3125,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Generate a unique username to avoid conflicts\nconst uniqueUsername = `testuser_${Date.now()}`;\nconst password = 'Password123';\n// Navigate directly to the registration page\ncy.visit('/register');\ncy.log('Visiting register page');\n// Fill in the registration form using selectors from fixture\ncy.get(selectors.auth.registerPage.usernameInput).type(uniqueUsername);\ncy.get(selectors.auth.registerPage.passwordInput).type(password);\ncy.log('Filled in registration form');\n// Submit the form\ncy.get(selectors.auth.registerPage.submitButton).click();\ncy.log('Submitted registration form');\n// Verify successful registration by checking we're redirected to login page\ncy.url().should('include', '/login');\ncy.log('Redirected to login page after registration');\n// Verify login works with the new credentials\ncy.get(selectors.auth.loginPage.usernameInput).clear().type(uniqueUsername, {\n  force: true\n});\ncy.get(selectors.auth.loginPage.passwordInput).clear().type(password, {\n  force: true\n});\ncy.log('Filled in login form');\n// Take a screenshot before clicking login\ncy.screenshot('before-login-click');\ncy.get(selectors.auth.loginPage.submitButton).click();\ncy.log('Submitted login form');\n// Take a screenshot after clicking login\ncy.screenshot('after-login-click');\n// Add a longer timeout and log the URL for debugging\ncy.url().then(url => {\n  cy.log(`Current URL: ${url}`);\n});\n// Verify successful login by checking we're redirected to dashboard\ncy.url().should('include', '/dashboard', {\n  timeout: 20000\n});\n// Skip the username check for now to focus on the redirection issue\n// cy.contains(uniqueUsername).should('be.visible');",
              "err": {},
              "uuid": "1a61bb0e-17d3-4758-ad40-6d7c6547ae32",
              "parentUUID": "ccdc139b-df4b-4f39-bc15-c865f453d265",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "4.2 should handle failed login attempt with incorrect password",
              "fullTitle": "4.1 User Authentication 4.2 should handle failed login attempt with incorrect password",
              "timedOut": null,
              "duration": 1400,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Set up test data\nconst username = `existinguser_${Date.now()}`;\nconst correctPassword = 'correctPassword123';\nconst incorrectPassword = 'wrongPassword123';\nconst email = `${username}@example.com`;\n// First, ensure the user exists by registering them\n// This step ensures we have a user to test against\ncy.request({\n  method: 'POST',\n  url: 'http://localhost:5001/api/auth/register',\n  body: {\n    username,\n    password: correctPassword\n  },\n  failOnStatusCode: false // Don't fail if user already exists\n});\n// Navigate directly to login page\ncy.visit('/login');\n// Attempt login with incorrect password using selectors from fixture\ncy.get(selectors.auth.loginPage.usernameInput).type(username);\ncy.get(selectors.auth.loginPage.passwordInput).type(incorrectPassword);\ncy.get(selectors.auth.loginPage.submitButton).click();\n// Take a screenshot for debugging\ncy.screenshot('failed-login-error');\n// Verify error message is displayed with the exact text\ncy.get(selectors.auth.loginPage.errorMessage).should('be.visible').should('contain', 'Invalid username or password');\n// Verify we remain on the login page\ncy.url().should('include', '/login');",
              "err": {},
              "uuid": "b6c01b3e-3ad1-4c64-9cd0-9c6dfa9c8232",
              "parentUUID": "ccdc139b-df4b-4f39-bc15-c865f453d265",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1a61bb0e-17d3-4758-ad40-6d7c6547ae32",
            "b6c01b3e-3ad1-4c64-9cd0-9c6dfa9c8232"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 4525,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports",
        "overwrite": false,
        "html": true,
        "json": true,
        "charts": true
      },
      "version": "6.2.0"
    }
  }
}